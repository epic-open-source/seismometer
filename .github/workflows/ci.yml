name: CI

on:
  push: {}
  pull_request: {}
  workflow_dispatch: {}

permissions: "read-all"

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install pre-commit
        run: |
          pip install --upgrade pip
          pip install pre-commit
      - name: Run pre-commit steps
        run: |
          pre-commit run --all-files
  test-coverage:
    name: Coverage py3.12
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otel: [true, false]  # Test with and without OpenTelemetry

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies (with metrics)
        if: ${{ matrix.otel }}
        run: |
          pip install --upgrade pip
          pip install -e .[dev,metrics]
      - name: Install dependencies (without metrics)
        if: ${{ !matrix.otel }}
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests
        run: |
          coverage run -m pytest
      - name: Generate report
        run: |
          coverage xml -o coverage/coverage-otel-${{ matrix.otel }}.xml
          coverage report
      - name: Generate html
        if: failure()
        run: |
          coverage html -d coverage/html-report-otel-${{ matrix.otel }}
      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-otel-${{ matrix.otel }}
          path: coverage/*
          if-no-files-found: error
  test-packaging:
    name: Test packaging
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build twine
      - name: Build package
        run: |
          python -m build
          python -m twine check dist/*
  test-versions:
    # Limit matrix to after base is passing
    needs: [test-coverage, linting, test-packaging]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        otel: [true, false]  # Test with and without OpenTelemetry
        include:
          - experimental: false

    name: Test python-${{ matrix.python-version }} on ${{ matrix.os }} (OTEL=${{ matrix.otel }})
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (with metrics)
        if: ${{ matrix.otel }}
        run: |
          pip install --upgrade pip
          pip install -e .[dev,metrics]
      - name: Install dependencies (without metrics)
        if: ${{ !matrix.otel }}
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests
        run: |
          pytest
